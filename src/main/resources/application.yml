spring:
  application:
    name: auth-groupware

  datasource:
    url: jdbc:postgresql://localhost:5432/groupware_db
    username: myuser
    password: ENC(bg3SOL/khQb3hTHXdQ6a7Cc34D7c7SFq2DeqkSxg/ct7VZU9LCNmMmpCdmtAwZ6Z)
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update   # 또는 validate, create-drop 등
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: spring-groupware-app
            client-secret: ENC(wafvD03FERqIMop5Wmsh3lA+kXGVVnPWBS57dJFE1ReHBwm9zvDKGfrHxAr0p64tfT6pK7WiD8MPQzGHSOscBVBLB0FkKTResKjJ5CTXnNQ=)
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - openid
              - profile
              - email
            provider: keycloak

        provider:
          keycloak:
            issuer-uri: http://localhost:8080/realms/groupware
      #          jwk-set-uri: http://localhost:8080/realms/groupware/protocol/openid-connect/certs
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/groupware

logging:
  level:
    root: INFO                              # 전체 로그 기본 레벨
    org.springframework.security: DEBUG     # 스프링 시큐리티 디버그
    sun.rmi.transport.tcp: WARN             # RMI/JMX 잡음 억제

server:
  port: 8081