spring:
  application:
    name: auth-groupware

  datasource:
    url: jdbc:postgresql://localhost:5432/groupware_db
    username: myuser
    password: ENC(bg3SOL/khQb3hTHXdQ6a7Cc34D7c7SFq2DeqkSxg/ct7VZU9LCNmMmpCdmtAwZ6Z)
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update   # dev 환경이면 update / 운영이면 validate 추천
    show-sql: true
    properties:
      hibernate:
        default_schema: groupware
        dialect: org.hibernate.dialect.PostgreSQLDialect

  # 1) Spring Security OAuth2 Client / Resource Server 설정
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: groupware-app
            client-secret: ENC(sD+z3xFyfBNEq5Uy6FcB5Sc0j0QmLnso5fceID0CkPPWHOpztuo5Iwn0ZMdMc+4H5EntVm2i3/e9AUJ5u9UFmG8oKm0ccjClAk8pRCKBnY0=)
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - openid
              - profile
              - email
            provider: keycloak
        provider:
          keycloak:
            issuer-uri: http://localhost:8080/realms/groupware
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/groupware

# 2) Keycloak Admin API 사용을 위한 설정
keycloak:
  auth-server-url: http://localhost:8080
  realm: groupware
  client-id: groupware-app
  client-secret: ENC(sD+z3xFyfBNEq5Uy6FcB5Sc0j0QmLnso5fceID0CkPPWHOpztuo5Iwn0ZMdMc+4H5EntVm2i3/e9AUJ5u9UFmG8oKm0ccjClAk8pRCKBnY0=)
  token-uri: "${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/token"
graph:
  client-id: 1ce57593-86c4-4ceb-a024-c2b15a0c129e
  client-secret: ENC(0btuSDMFX+RI7OHTLBRJlle36AwkHGpDa4+v6LmmoGEnxadgD6oDdCabqn7jdXjgEMWuwL3tGA+fMyGG96SDv1C4lxk2WSZc6KKlJz/KX/c=)
  tenant-id: 3c6e1605-cc29-4ef2-8ac8-ad3901cb0d85
  token-uri: https://login.microsoftonline.com/${graph.tenant-id}/oauth2/v2.0/token
  scope: https://graph.microsoft.com/.default
  base-url: https://graph.microsoft.com/v1.0


logging:
  level:
    root: INFO                              # 전체 로그 기본 레벨
    org.springframework.security: DEBUG     # 스프링 시큐리티 디버그
    sun.rmi.transport.tcp: WARN             # RMI/JMX 잡음 억제

springdoc:
  swagger-ui:
    tagsSorter: alpha

server:
  port: 8081